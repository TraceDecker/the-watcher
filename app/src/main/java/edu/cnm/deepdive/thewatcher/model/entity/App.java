package edu.cnm.deepdive.thewatcher.model.entity;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.Index;
import androidx.room.PrimaryKey;

@Entity(
    foreignKeys = {
        @ForeignKey(
            entity = Policy.class,
            parentColumns = "policy_id",
            childColumns = "policy_id",
            onDelete = ForeignKey.CASCADE
        )
    },
    indices = {
        @Index(value = "app_name"),
        @Index(value = "app_package")
    }
)
public class App {

  @ColumnInfo(name = "app_id")
  @PrimaryKey(autoGenerate = true) // PK should be autogenerated every time.
  private long id;

  @ColumnInfo(name = "app_name", collate = ColumnInfo.NOCASE)
  // collate statement allows string names to be case insensitive.
  private String appName;

  @ColumnInfo(name = "app_package", collate = ColumnInfo.NOCASE)
  private String appPackage;

  @ColumnInfo(name = "policy_id")
  private long policyId;

  public long getId() {
    return id;
  }

  public void setId(long id) {
    this.id = id;
  }

  public String getAppName() {
    return appName;
  }

  public void setAppName(String appName) {
    this.appName = appName;
  }

  public String getAppPackage() {
    return appPackage;
  }

  public void setAppPackage(String appPackage) {
    this.appPackage = appPackage;
  }

  public long getPolicyId() {
    return policyId;
  }

  public void setPolicyId(long policyId) {
    this.policyId = policyId;
  }
}